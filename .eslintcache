[{"/Users/admin/Documents/Work/music-player/src/index.js":"1","/Users/admin/Documents/Work/music-player/src/App.js":"2","/Users/admin/Documents/Work/music-player/src/components/Library.js":"3","/Users/admin/Documents/Work/music-player/src/data.js":"4","/Users/admin/Documents/Work/music-player/src/components/Player.js":"5","/Users/admin/Documents/Work/music-player/src/components/Song.js":"6","/Users/admin/Documents/Work/music-player/src/components/Nav.js":"7","/Users/admin/Documents/Work/music-player/src/components/LibrarySong.js":"8"},{"size":198,"mtime":1626160211114,"results":"9","hashOfConfig":"10"},{"size":1850,"mtime":1626162852443,"results":"11","hashOfConfig":"10"},{"size":671,"mtime":1626160718450,"results":"12","hashOfConfig":"10"},{"size":2870,"mtime":1626160211113,"results":"13","hashOfConfig":"10"},{"size":2681,"mtime":1626160211113,"results":"14","hashOfConfig":"10"},{"size":318,"mtime":1626160211113,"results":"15","hashOfConfig":"10"},{"size":294,"mtime":1626163313944,"results":"16","hashOfConfig":"10"},{"size":949,"mtime":1626160211113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1do2mhl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/admin/Documents/Work/music-player/src/index.js",[],["36","37"],"/Users/admin/Documents/Work/music-player/src/App.js",["38"],"/Users/admin/Documents/Work/music-player/src/components/Library.js",[],"/Users/admin/Documents/Work/music-player/src/data.js",[],"/Users/admin/Documents/Work/music-player/src/components/Player.js",["39"],"import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({ songs, currentSong, setCurrentSong, isPlaying, setIsPlaying, audioRef, songInfo, setSongInfo }) => {\n    //Event Handler\n    const playSongHandler = () => {\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\n        setIsPlaying(!isPlaying);\n    }\n\n    const getTime = (time) => {\n        return (\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value}); /// adding \"...songInfo\" lets you keep the current Info and only update currentTime.\n    }\n\n    const skipTrackHandler = (direction) => {\n        const directionValue = direction === 'skip-back' ? -1 : 1;\n        let currentIndex = songs?.findIndex((song) => song?.id === currentSong?.id);\n        songs[currentIndex].active = false;\n        let newIndex = currentIndex + directionValue;\n\n        if (newIndex < 0) {\n            newIndex = songs.length - 1;\n        } else if (newIndex >= songs.length){\n            newIndex = 0;\n        }\n\n        setCurrentSong(songs[newIndex]);\n        songs[newIndex].active = true;\n\n        //stack overflow code that fixes error when changing songs\n        if(isPlaying) {\n            const playPromise = audioRef.current.play();\n            if(playPromise !== undefined) {\n                playPromise.then((audio) => {\n                    audioRef.current.play();\n                })\n            }\n        }\n\n    }\n\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input \n                min={0}\n                max={songInfo.duration}\n                value={songInfo.currentTime}\n                onChange={dragHandler}\n                type=\"range\"/>\n                <p>{getTime(songInfo.duration)}</p>        \n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" icon={faAngleLeft} size=\"2x\" />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" icon={ isPlaying ? faPause : faPlay} size=\"2x\" />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" icon={faAngleRight} size=\"2x\" />\n            </div>\n        </div>\n    )\n};\n\nexport default Player;","/Users/admin/Documents/Work/music-player/src/components/Song.js",[],"/Users/admin/Documents/Work/music-player/src/components/Nav.js",[],"/Users/admin/Documents/Work/music-player/src/components/LibrarySong.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":17,"column":17,"nodeType":"46","messageId":"47","endLine":17,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setSongs' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]